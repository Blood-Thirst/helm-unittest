templates:
  - templates/lookup.yaml
kubernetesProvider:
  scheme:
    "v1/Namespace":
      gvr:
        version: "v1"
        resource: "namespaces"
      namespaced: false
    "v1/Pod":
      gvr:
        version: "v1"
        resource: "pods"
      namespaced: true
    "networking.k8s.io/v1/Ingress":
      gvr:
        group: "networking.k8s.io"
        version: "v1"
        resource: "ingresses"
      namespaced: true
  objects:
    - kind: Pod
      apiVersion: v1
      metadata:
        name: exists
        namespace: default
    - kind: Ingress
      apiVersion: networking.k8s.io/v1
      metadata:
        name: exists
        namespace: default
    - kind: Namespace
      apiVersion: v1
      metadata:
        name: exists
    - kind: Namespace
      apiVersion: v1
      metadata:
        name: exists2
tests:
  - it: manifest should match snapshot
    asserts:
      - matchSnapshot: {}
      - isNotNullOrEmpty:
          path: pod_exists
      - isNotNullOrEmpty:
          path: ingress_exists
      - isNotNullOrEmpty:
          path: namespace_exists
      - isNullOrEmpty:
          path: pod_not_exists
      - isNullOrEmpty:
          path: ingress_not_exists
      - isNullOrEmpty:
          path: namespace_not_exists
      - equal:
          path: pod_exists.kind
          value: Pod
      - equal:
          path: pod_exists.apiVersion
          value: v1
      - equal:
          path: pod_exists.metadata.name
          value: exists
      - equal:
          path: pod_exists.metadata.namespace
          value: default
      - lengthEqual:
          path: namespaces.items
          count: 2
  - it: manifest should validate pod_not_exists due to additional object add in testjob
    kubernetesProvider:
      objects:
        - kind: Pod
          apiVersion: v1
          metadata:
            name: not-exists
            namespace: default
    asserts:
      - isNotNullOrEmpty:
          path: pod_not_exists
      - equal:
          path: pod_not_exists.kind
          value: Pod
      - equal:
          path: pod_not_exists.apiVersion
          value: v1
      - equal:
          path: pod_not_exists.metadata.name
          value: not-exists
      - equal:
          path: pod_not_exists.metadata.namespace
          value: default
